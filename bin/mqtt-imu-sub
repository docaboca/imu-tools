#!/usr/bin/env python3
import json
import time

import paho.mqtt.client as mqtt

import config as MQTT_CONFIG


# The callback for when the client receives a CONNACK response from the server.
def on_connect(_client, userdata, _flags, rc):
    print(f"Connected to {userdata} with result code {rc}")
    client.subscribe("imu")


sample_start_time, sample_count = time.time(), 0
show_samples = False
show_frame_rate = True
sample_period = 10

# The callback for when a PUBLISH message is received from the server.


def on_message(_client, _userdata, msg):
    global sample_start_time, sample_count
    data = json.loads(msg.payload)
    if show_samples:
        print(data)
    if "accelerometer" in data:
        sample_count += 1
        now = time.time()
        elapsed = now - sample_start_time
        # print(".", elapsed, end="", flush=True)
        if elapsed >= sample_period:
            if show_frame_rate:
                # logger.info("{:0.1f} samples/sec", samples / elapsed)
                print(f"{sample_count / elapsed:0.1f} samples/sec")
            sample_start_time = now
            sample_count = 0


client = mqtt.Client(userdata=MQTT_CONFIG.host)
client.on_connect = on_connect
client.on_message = on_message
client.on_log = True

if MQTT_CONFIG.user:
    client.username_pw_set(MQTT_CONFIG.user, password=MQTT_CONFIG.password)
print(f"Connecting to {MQTT_CONFIG.host}...")
client.connect(MQTT_CONFIG.host, MQTT_CONFIG.port)

client.loop_forever()
